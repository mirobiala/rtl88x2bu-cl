diff --git a/Makefile b/Makefile
index e98e3ca..128de80 100644
--- a/Makefile
+++ b/Makefile
@@ -101,13 +101,13 @@ ccflags-y += -DCONFIG_RTW_ANDROID=$(CONFIG_RTW_ANDROID)
 endif
 
 ########################## Debug ###########################
-CONFIG_RTW_DEBUG = y
+CONFIG_RTW_DEBUG = n
 # default log level is _DRV_INFO_ = 4,
 # please refer to "How_to_set_driver_debug_log_level.doc" to set the available level.
 CONFIG_RTW_LOG_LEVEL = 3
 
 # enable /proc/net/rtlxxxx/ debug interfaces
-CONFIG_PROC_DEBUG = y
+CONFIG_PROC_DEBUG = n
 
 ######################## Wake On Lan ##########################
 CONFIG_WOWLAN = n
@@ -137,7 +137,8 @@ CONFIG_LAYER2_ROAMING = y
 #bit0: ROAM_ON_EXPIRED, #bit1: ROAM_ON_RESUME, #bit2: ROAM_ACTIVE
 CONFIG_ROAMING_FLAG = 0x3
 ###################### Platform Related #######################
-CONFIG_PLATFORM_I386_PC = y
+CONFIG_PLATFORM_OPENWRT = y
+CONFIG_PLATFORM_I386_PC = n
 CONFIG_PLATFORM_ANDROID_X86 = n
 CONFIG_PLATFORM_ANDROID_INTEL_X86 = n
 CONFIG_PLATFORM_JB_X86 = n
@@ -1336,6 +1337,34 @@ ifeq ($(CONFIG_RTW_IOCTL_SET_COUNTRY), y)
 ccflags-y += -DCONFIG_RTW_IOCTL_SET_COUNTRY
 endif
 
+ifeq ($(CONFIG_PLATFORM_OPENWRT), y)
+include $(TOPDIR)/rules.mk
+include $(INCLUDE_DIR)/kernel.mk
+
+ccflags-y += -DCONFIG_LITTLE_ENDIAN \
+		-DCONFIG_IOCTL_CFG80211 \
+		-DRTW_USE_CFG80211_STA_EVENT \
+		-DRTW_IPS_MODE=0 \
+		-DRTW_LPS_MODE=0 \
+		-DRTW_WOW_LPS_MODE=0 \
+		-DCONFIG_TDLS \
+		-DCONFIG_RTW_MESH \
+		-DCONFIG_RTW_MULTI_AP \
+		-DRTW_P2P_GROUP_INTERFACE=1 \
+		-DCONFIG_FORCE_SW_CHANNEL_PLAN \
+		-DCONFIG_CONCURRENT_MODE \
+		-DCONFIG_IFACE_NUMBER=4 \
+		-DCONFIG_QOS_OPTIMIZATION \
+		-DRTW_REDUCE_SCAN_SWITCH_CH_TIME \
+		-Wno-error
+
+USER_MODULE_NAME := rtl$(MODULE_NAME)
+ARCH="$(LINUX_KARCH)"
+CROSS_COMPILE="$(TARGET_CROSS)"
+KSRC="$(LINUX_DIR)"
+KVER="$(LINUX_VERSION)"
+endif
+
 ifeq ($(CONFIG_PLATFORM_I386_PC), y)
 ccflags-y += -DCONFIG_LITTLE_ENDIAN
 ccflags-y += -DCONFIG_IOCTL_CFG80211 -DRTW_USE_CFG80211_STA_EVENT
diff --git a/core/mesh/rtw_mesh.c b/core/mesh/rtw_mesh.c
index fad46e8..de92cb3 100644
--- a/core/mesh/rtw_mesh.c
+++ b/core/mesh/rtw_mesh.c
@@ -3021,11 +3021,7 @@ static void rtw_mpath_tx_queue_flush(_adapter *adapter)
 }
 
 #ifdef PLATFORM_LINUX /* 3.10 ~ 4.13 checked */
-#if defined(CONFIG_SLUB)
-#include <linux/slub_def.h>
-#elif defined(CONFIG_SLAB)
-#include <linux/slab_def.h>
-#endif
+#include <linux/slab.h>
 typedef struct kmem_cache rtw_mcache;
 #endif
 
diff --git a/os_dep/linux/ioctl_cfg80211.c b/os_dep/linux/ioctl_cfg80211.c
index 1b042f6..3a1caa4 100755
--- a/os_dep/linux/ioctl_cfg80211.c
+++ b/os_dep/linux/ioctl_cfg80211.c
@@ -457,7 +457,7 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter, u8 ch, u8 bw, u8 offset,
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 19, 0))
 	if (started) {
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 9, 0))
+#if ((LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 9, 0)) && !defined(BUILD_OPENWRT))
 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0, 0, false, 0);
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0, 0, false);
@@ -482,7 +482,7 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter, u8 ch, u8 bw, u8 offset,
 	if (!rtw_cfg80211_allow_ch_switch_notify(adapter))
 		goto exit;
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 9, 0))
+#if ((LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 9, 0)) && !defined(BUILD_OPENWRT))
 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef, 0, 0);
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2))
 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef, 0);
@@ -5460,7 +5460,7 @@ exit:
 }
 
 static int cfg80211_rtw_change_beacon(struct wiphy *wiphy, struct net_device *ndev,
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0))
+#if ((LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0)) || defined(BUILD_OPENWRT))
 		struct cfg80211_ap_update *ap)
 #else
 		struct cfg80211_beacon_data *info)
@@ -5471,7 +5471,7 @@ static int cfg80211_rtw_change_beacon(struct wiphy *wiphy, struct net_device *nd
 
 	RTW_INFO(FUNC_NDEV_FMT"\n", FUNC_NDEV_ARG(ndev));
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0))
+#if ((LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0)) || defined(BUILD_OPENWRT))
 	ret = rtw_add_beacon(adapter, ap->beacon.head, ap->beacon.head_len,
 		ap->beacon.tail, ap->beacon.tail_len);
 #else
@@ -6958,7 +6958,7 @@ static void rtw_get_chbwoff_from_cfg80211_chan_def(
 #endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0)) */
 
 static int cfg80211_rtw_set_monitor_channel(struct wiphy *wiphy
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0))
+#if ((LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)) || defined(BUILD_OPENWRT))
 	, struct net_device *dev
 #endif
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0))
@@ -8515,6 +8515,9 @@ static int cfg80211_rtw_tdls_mgmt(struct wiphy *wiphy,
 	const u8 *peer,
 #else
 	u8 *peer,
+#endif
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 5, 0))
+	int link_id,
 #endif
 	u8 action_code,
 	u8 dialog_token,
diff --git a/os_dep/linux/os_intfs.c b/os_dep/linux/os_intfs.c
index 1d50aa5..3135dd4 100644
--- a/os_dep/linux/os_intfs.c
+++ b/os_dep/linux/os_intfs.c
@@ -2149,6 +2149,8 @@ int rtw_os_ndev_register(_adapter *adapter, const char *name)
 #ifdef CONFIG_RTW_NAPI
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
 	netif_napi_add_weight(ndev, &adapter->napi, rtw_recv_napi_poll, RTL_NAPI_WEIGHT);
+#elif defined(BUILD_OPENWRT)
+	netif_napi_add(ndev, &adapter->napi, rtw_recv_napi_poll);
 #else
 	netif_napi_add(ndev, &adapter->napi, rtw_recv_napi_poll, RTL_NAPI_WEIGHT);
 #endif
